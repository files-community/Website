@use "src/styles/mixins" as *;

// Backdrop icons
// Used as a decoration behind feature showcases
.backdrop-icon {
	position: absolute;
	inline-size: auto;
	max-inline-size: 132%;
	block-size: 100%;
	transform: rotate(-10deg) scale(var(--icon-scale, 1));

	path {
		fill: none;
		stroke: var(--fds-card-stroke-default);
		stroke-width: var(--icon-stroke-width, 0.25);
	}
}

// Showcase panels
// Floating, transient surfaces representing different UI elements
.showcase-panel {
	position: relative;
	border: 1px solid var(--fds-surface-stroke-default);
	border-radius: var(--fds-overlay-corner-radius);
	background-color: var(--fds-solid-background-base);
	box-shadow: 0 2.74416px 2.74416px hsl(0, 0%, 0%, 3%),
		0 5.48831px 5.48831px hsl(0, 0%, 0%, 4%),
		0 13.7208px 10.9766px hsl(0, 0%, 0%, 5%),
		0 20.5812px 20.5812px hsl(0, 0%, 0%, 6%),
		0 41.1623px 41.1623px hsl(0, 0%, 0%, 7%),
		0 96.0454px 89.1851px hsl(0, 0%, 0%, 9%);
	font-family: "Segoe UI Variable Text", var(--font-family-sans-serif);
	user-select: none;

	// Disable user dragging on images to be consistent with Files
	img {
		-webkit-user-drag: none;
	}
}

.files-table {
	inline-size: 100%;
	margin-block-end: 3px;
	border-collapse: collapse;
	line-height: 1.4rem;
	white-space: nowrap;

	// Rows
	tr {
		border-radius: var(--fds-control-corner-radius);
		position: relative;
		block-size: 36px;

		// Tables are rather limited with margins/ To get around
		// some of these limitations, I'm using apsuedoelement as
		// a replacement for background-color.
		&:not(:first-child) {
			&::after {
				content: "";
				position: absolute;
				inset-block-start: 3px;
				inset-inline-start: 5px;
				z-index: 0;
				width: calc(100% - 10px);
				height: 3rem;
				border-radius: var(--fds-control-corner-radius);
			}

			&:hover::after {
				background-color: var(--fds-subtle-fill-secondary);
			}

			&:active::after {
				background-color: var(--fds-subtle-fill-tertiary);
			}
		}
	}

	// Table contents (headers and columns)
	td,
	th {
		position: relative;
		z-index: 1;
		padding: 0 12px;
		color: var(--fds-text-primary);
		vertical-align: middle;

		// Blank first cell for the file icon
		&:first-child {
			padding-inline-end: 6px;
			padding-inline-start: 12px;
			border-inline-start: none;
		}
	}

	// Table headers
	th {
		border-block-end: 1px solid var(--fds-control-stroke-default);
		border-inline-start: 1px solid var(--fds-control-stroke-default);
		font-weight: 600;
		text-align: start;

		&:last-child {
			inline-size: 100%;
		}
	}

	td {
		:global(.fluent-icon) {
			@include icon($size: 20px);
			animation: var(--fds-control-normal-duration) ease feature-item-scale
				backwards calc(600ms + (100ms * var(--file-index)));
		}
	}
}

// Animations for the feature previews

// Panel entrance animation
@keyframes feature-panel {
	from {
		opacity: 0;
		transform: translate(var(--panel-offset, 0px), var(--panel-offset, 0px))
			scale(calc(0.9 + var(--panel-scale, 0)));
		transform-origin: bottom;
	}
}

// Generic scale animation
@keyframes feature-item-scale {
	from {
		opacity: 0;
		transform: scale(0.75);
	}
}

// Generic fade animation
@keyframes fade {
	from {
		opacity: 0;
	}
}
