@use "src/styles/mixins" as *;

/*
 * Section 1 (Hero)
 */

:global {
	// Outer section
	#hero-section {
		position: relative;
		height: 75vh;
		min-height: 584px;
		max-height: 1024px;
		border-block-end: 1px solid var(--divider-color-default);
		overflow: hidden;

		// Inner Section
		.page-section-inner {
			position: relative;
			display: grid;
			grid-template-columns: 1fr 1.5fr;
			align-items: center;
			gap: 64px;
		}

		// Custom button styling
		// Applied on download and source buttons respectively
		.button {
			padding: 7px 12px;

			svg {
				@include icon($size: 18px);
			}
		}

		.style-standard .hero-button-inner {
			color: var(--text-color-secondary);

			h5 {
				color: var(--text-color-primary);
			}
		}

		#hero-download-button {
			min-width: 128px;
		}

		// Properly position download source flyout
		.split-button {
			position: relative;

			.menu-flyout-container {
				display: contents;

				&:last-child .button {
					padding: 0 8px;

					svg {
						@include icon($size: 12px);
					}
				}
			}
		}

		@keyframes canvas-hue-rotate {
			0% {
				filter: none;
			}
			50% {
				filter: hue-rotate(180deg);
			}
			to {
				filter: none;
			}
		}

		// Backdrop canvas
		canvas {
			position: absolute;
			inset-inline-end: 0;
			inset-block-end: 0;
			z-index: -1;
			width: 60vw;
			min-width: 100vh;
			height: 100%;
			mask: url("/ui/hero-mask.png") bottom right/cover no-repeat;
			animation: canvas-hue-rotate 15s infinite linear;
			// this is only in #-HEX format for the hero section gradient to work
			--gradient-color-1: #50dc6f;
			--gradient-color-2: #00d6ba;
			--gradient-color-3: #0390e2;
			--gradient-color-4: var(--background-base);

			@media (prefers-color-scheme: light) {
				opacity: 0.5;
			}

			@media only screen and (max-width: 1024px) {
				width: 100%;
			}

			@media only screen and (max-width: 648px) {
				height: 60vh;
				mask-size: 100% 100%;
			}
		}
	}
}

// Hero container elements
.hero- {
	// Left container
	&left {
		@include flex($direction: column, $justify: center);
		flex: 1 1 auto;
	}

	// Right container
	&right {
		@include flex($align: center);
		height: 100%;

		img {
			position: absolute;
			inset-inline-end: 0;
			width: auto;
			max-width: 100%;
			height: auto;
			max-height: 100%;
			border: 1px solid var(--surface-stroke-default);
			border-radius: calc(var(--overlay-corner-radius) / 1.5);
			background-color: hsl(var(--mica-tint), calc(var(--mica-tint-opacity) / 1.5));
			box-shadow: var(--window-elevation);
			overflow: hidden;
			user-select: none;
			-webkit-user-drag: none;
			aspect-ratio: 1280 / 960;
			backdrop-filter: blur(60px) saturate(150%);

			@media only screen and (min-width: 2048px) {
				border-radius: var(--overlay-corner-radius);
			}
		}
	}

	// Inner hero buttons
	&button-inner {
		@include flex($direction: column);
		margin-inline-start: 8px;
		font-size: 1.1rem;
		line-height: normal;

		h5 {
			margin: 0;
			font-size: 1.25rem;
			font-weight: 600;
		}
	}

	// Hero image container
	&image-container {
		@include flex($align: center, $justify: center);
		position: relative;
		width: 100%;
		height: 100%;
		max-height: 768px;
	}
}

// Hero section small device support
@media only screen and (max-width: 1024px) {
	:global {
		// Remove height constraints on outer container
		#hero-section {
			height: auto;
			max-height: unset;

			// Position inner containers vertically
			.page-section-inner {
				grid-template-columns: auto;
			}
		}
	}

	.hero- {
		// Centrally align content in the left container
		&left {
			align-items: center;
			text-align: center;

			.buttons-spacer {
				justify-content: center;
			}
		}

		// Properly position hero image
		&right img {
			position: relative;
			width: 100%;
			max-width: 708px;
			height: auto;
		}
	}
}