@mixin flex(
	$direction: false,
	$justify: false,
	$align: false,
	$inline: false,
	$wrap: false,
	$gap: false
) {
	// display: flex/inline-flex
	@if $inline {
		display: inline-flex;
	} @else {
		display: flex;
	}

	// flex-direction
	@if $direction != false {
		@if $direction == row {
			flex-direction: row;
		} @else if $direction == column {
			flex-direction: column;
		} @else if $direction == row-reverse {
			flex-direction: row-reverse;
		} @else if $direction == column-reverse {
			flex-direction: column-reverse;
		}
	}

	// justify-content
	@if $justify != false {
		@if $justify == normal {
			justify-content: normal;
		} @else if $justify == center {
			justify-content: center;
		} @else if $justify == start {
			justify-content: flex-start;
		} @else if $justify == end {
			justify-content: flex-end;
		} @else if $justify == space-between {
			justify-content: space-between;
		} @else if $justify == around {
			justify-content: space-around;
		} @else if $justify == space-evenly {
			justify-content: space-evenly;
		}
	}

	// align-items/align-content
	@if $align != false {
		@if $align == normal {
			align-items: normal;
		} @else if $align == center {
			align-items: center;
		} @else if $align == start {
			align-items: flex-start;
		} @else if $align == end {
			align-items: flex-end;
		} @else if $align == space-between {
			align-content: space-between;
		} @else if $align == around {
			align-content: space-around;
		} @else if $align == space-evenly {
			align-content: space-evenly;
		}
	}

	// flex-wrap
	@if $wrap {
		flex-wrap: wrap;
	}

	// gap
	@if $gap {
		gap: $gap;
	}
}

@mixin icon($size: 14px) {
	inline-size: $size;
	block-size: auto;
	fill: currentColor;
}

@mixin prism-vs-light {
	& {
		color: #393a34;
	}

	.comment,
	.prolog,
	.doctype,
	.cdata {
		color: #008000;
		font-style: italic;
	}

	.namespace {
		opacity: 0.7;
	}

	.string {
		color: #a31515;
	}

	.punctuation,
	.operator {
		color: #393a34; /* no highlight */
	}

	.url,
	.symbol,
	.number,
	.boolean,
	.variable,
	.constant,
	.inserted {
		color: #36acaa;
	}

	.atrule,
	.keyword,
	.attr-value,
	.language-autohotkey .selector,
	.language-json .boolean,
	.language-json .number,
	&[class*="language-css"] {
		color: #00f;
	}

	.function {
		color: #393a34;
	}

	.deleted,
	.language-autohotkey .tag {
		color: #9a050f;
	}

	.selector,
	.language-autohotkey .keyword {
		color: #00009f;
	}

	.important {
		color: #e90;
	}

	.important,
	.bold {
		font-weight: bold;
	}

	.italic {
		font-style: italic;
	}

	.class-name,
	.language-json .property {
		color: #2b91af;
	}

	.tag,
	.selector {
		color: #800000;
	}

	.attr-name,
	.property,
	.regex,
	.entity {
		color: #f00;
	}

	.directive.tag .tag {
		background: #ff0;
		color: #393a34;
	}

	.line-numbers .line-numbers-rows {
		border-inline-end-color: #a5a5a5;
	}

	.line-numbers-rows > span:before {
		color: #2b91af;
	}
}

@mixin prism-vs-dark {
	& {
		color: #d4d4d4;
	}

	&[class*="language-javascript"],
	&[class*="language-jsx"],
	&[class*="language-typescript"],
	&[class*="language-tsx"] {
		color: #9cdcfe;
	}

	&[class*="language-css"] {
		color: #ce9178;
	}

	&[class*="language-html"] {
		color: #d4d4d4;
	}

	.language-regex .anchor {
		color: #dcdcaa;
	}

	.language-html .punctuation {
		color: #808080;
	}

	.namespace {
		opacity: 0.7;
	}

	.doctype .doctype-tag {
		color: #569cd6;
	}

	.doctype .name {
		color: #9cdcfe;
	}

	.comment,
	.prolog {
		color: #6a9955;
	}

	.punctuation,
	.language-html .language-css .punctuation,
	.language-html .language-javascript .punctuation {
		color: #d4d4d4;
	}

	.property,
	.tag,
	.boolean,
	.number,
	.constant,
	.symbol,
	.inserted,
	.unit {
		color: #b5cea8;
	}

	.selector,
	.attr-name,
	.string,
	.char,
	.builtin,
	.deleted {
		color: #ce9178;
	}

	.language-css .string.url {
		text-decoration: underline;
	}

	.operator,
	.entity {
		color: #d4d4d4;
	}

	.operator.arrow {
		color: #569cd6;
	}

	.atrule {
		color: #ce9178;
	}

	.atrule .rule {
		color: #c586c0;
	}

	.atrule .url {
		color: #9cdcfe;
	}

	.atrule .url .function {
		color: #dcdcaa;
	}

	.atrule .url .punctuation {
		color: #d4d4d4;
	}

	.keyword {
		color: #569cd6;
	}

	.keyword.module,
	.keyword.control-flow {
		color: #c586c0;
	}

	.function,
	.function .maybe-class-name {
		color: #dcdcaa;
	}

	.regex {
		color: #d16969;
	}

	.important {
		color: #569cd6;
	}

	.italic {
		font-style: italic;
	}

	.constant {
		color: #9cdcfe;
	}

	.class-name,
	.maybe-class-name {
		color: #4ec9b0;
	}

	.console {
		color: #9cdcfe;
	}

	.parameter {
		color: #9cdcfe;
	}

	.interpolation {
		color: #9cdcfe;
	}

	.punctuation.interpolation-punctuation {
		color: #569cd6;
	}

	.boolean {
		color: #569cd6;
	}

	.property,
	.variable,
	.imports .maybe-class-name,
	.exports .maybe-class-name {
		color: #9cdcfe;
	}

	.selector {
		color: #d7ba7d;
	}

	.escape {
		color: #d7ba7d;
	}

	.tag {
		color: #569cd6;
	}

	.tag .punctuation {
		color: #808080;
	}

	.cdata {
		color: #808080;
	}

	.attr-name {
		color: #9cdcfe;
	}

	.attr-value,
	.attr-value .punctuation {
		color: #ce9178;
	}

	.attr-value .punctuation.attr-equals {
		color: #d4d4d4;
	}

	.entity {
		color: #569cd6;
	}

	.namespace {
		color: #4ec9b0;
	}
}
